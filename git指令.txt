**************************连接 GitHub 远程仓库的详细步骤：****************
1.创建 GitHub 仓库

2 本地初始化仓库（已有项目）
git init

3.连接远程仓库
# 添加远程仓库地址（HTTPS 方式）
git remote add origin https://github.com/your-username/repo-name.git

# 或者使用 SSH 方式（需提前配置 SSH key）
git remote add origin git@github.com:your-username/repo-name.git
*****(断开远程仓库连接)*****
git remote remove origin

# 验证远程仓库是否添加成功
git remote -v

4. 推送本地代码到远程仓库
# 将本地主分支推送到远程仓库（第一次推送需指定上游分支）
git push -u origin main  # 若使用的是 master 分支，则改为 git push -u origin master

5. 克隆远程仓库（新项目）
# 克隆远程仓库到本地
git clone https://github.com/your-username/repo-name.git  # HTTPS 方式
# 或
git clone git@github.com:your-username/repo-name.git  # SSH 方式
**************************连接 GitHub 远程仓库的详细步骤：****************

********************连接 GitHub 远程仓库后，通过以下步骤将本地文件推送到远程仓库:************************
1. 添加文件到本地仓库
# 添加单个文件
git add filename.txt

# 添加多个文件（用空格分隔）
git add file1.txt file2.py

# 添加所有修改（常用）
git add .

2. 提交文件到本地仓库
# 提交并添加描述
git commit -m "添加新功能"  # 替换为你的提交描述

# 若需补充上次提交的描述或修改
git commit --amend

3. 推送到远程仓库
# 第一次推送（需指定上游分支）
git push -u origin main  # 若使用 master 分支，则改为 git push -u origin master

# 后续推送（无需指定上游分支）
<<<<<<< HEAD
git push

推送时出现错误相同的引用：the same ref. If you want to integrate the remote changes, use
远程仓库的文件名和本地仓库的一样，需要先同步远程更新  Git 拒绝直接推送是为了防止覆盖他人的提交。
按照 Git 提示，你需要先 拉取（pull） 远程更新并合并到本地，再尝试推送：
# 1. 先拉取远程更新并尝试自动合并
git pull origin master
# 2. 如果有冲突，手动解决冲突
#    编辑器会显示冲突标记（<<<<<<<、=======、>>>>>>>）
#    修改文件后保存，然后提交合并
git add .
git commit -m "Merge remote changes"

# 3. 再次推送
git push origin master

********************连接 GitHub 远程仓库后，通过以下步骤将本地文件推送到远程仓库:************************

***********************报错22:*********************
# 编辑SSH配置文件
nano ~/.ssh/config

# 添加以下内容
Host github.com
  Hostname ssh.github.com
  Port 443
  User git
***********************报错22:*********************

********************基于master添加master2分支*********************
步骤 1：确保本地仓库与远程同步
# 拉取远程所有分支的最新内容
git fetch origin

# 查看所有分支（包括远程分支）
git branch -a

步骤 2：基于远程 master 创建本地 master2 分支
git checkout -b master2 origin/master

步骤 3：（可选）在本地测试或修改 master2
# 例如：修改文件后
git add .
git commit -m "Initial commit for master2"

步骤 4：将本地 master2 推送到远程仓库
git push -u origin master2
********************基于master添加master2分支*********************